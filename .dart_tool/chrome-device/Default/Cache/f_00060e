define(['dart_sdk', 'packages/flutter/src/widgets/async.dart', 'packages/youtube_player_iframe/src/player_value.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/foundation/basic_types.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/youtube_player_iframe/src/enums/player_state.dart', 'packages/youtube_player_iframe/src/enums/youtube_error.dart', 'packages/youtube_player_iframe/src/meta_data.dart', 'packages/flutter/src/widgets/platform_view.dart'], (function load__packages__youtube_player_iframe__src__helpers__youtube_value_builder_dart(dart_sdk, packages__flutter__src__widgets__async$46dart, packages__youtube_player_iframe__src__player_value$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__foundation__basic_types$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__youtube_player_iframe__src__enums__player_state$46dart, packages__youtube_player_iframe__src__enums__youtube_error$46dart, packages__youtube_player_iframe__src__meta_data$46dart, packages__flutter__src__widgets__platform_view$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const developer = dart_sdk.developer;
  const _js_helper = dart_sdk._js_helper;
  const async = dart_sdk.async;
  const html = dart_sdk.html;
  const ui = dart_sdk.ui;
  const convert = dart_sdk.convert;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const async$ = packages__flutter__src__widgets__async$46dart.src__widgets__async;
  const player_value = packages__youtube_player_iframe__src__player_value$46dart.src__player_value;
  const basic = packages__flutter__src__widgets__widget_span$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const basic_types = packages__flutter__src__foundation__basic_types$46dart.src__foundation__basic_types;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const player_state = packages__youtube_player_iframe__src__enums__player_state$46dart.src__enums__player_state;
  const youtube_error = packages__youtube_player_iframe__src__enums__youtube_error$46dart.src__enums__youtube_error;
  const meta_data = packages__youtube_player_iframe__src__meta_data$46dart.src__meta_data;
  const platform_view = packages__flutter__src__widgets__platform_view$46dart.src__widgets__platform_view;
  var youtube_value_builder = Object.create(dart.library);
  var player_fragments = Object.create(dart.library);
  var youtube_player_web = Object.create(dart.library);
  var youtube_value_provider = Object.create(dart.library);
  var player_params = Object.create(dart.library);
  var controller = Object.create(dart.library);
  var youtube_player_iframe = Object.create(dart.library);
  var $toString = dartx.toString;
  var $_set = dartx._set;
  var $isNotEmpty = dartx.isNotEmpty;
  var $join = dartx.join;
  var $border = dartx.border;
  var $onMessage = dartx.onMessage;
  var $data = dartx.data;
  var $containsKey = dartx.containsKey;
  var $_get = dartx._get;
  var $toDouble = dartx.toDouble;
  var $floor = dartx.floor;
  var $contentWindow = dartx.contentWindow;
  var $postMessage = dartx.postMessage;
  var $contains = dartx.contains;
  var $trim = dartx.trim;
  dart._checkModuleNullSafetyMode(false);
  var T = Object.create({
    YoutubePlayerValueL: () => (T.YoutubePlayerValueL = dart.constFn(dart.legacy(player_value.YoutubePlayerValue)))(),
    StreamBuilderOfYoutubePlayerValueL: () => (T.StreamBuilderOfYoutubePlayerValueL = dart.constFn(async$.StreamBuilder$(T.YoutubePlayerValueL())))(),
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))(),
    WidgetL: () => (T.WidgetL = dart.constFn(dart.legacy(framework.Widget)))(),
    BuildContextL: () => (T.BuildContextL = dart.constFn(dart.legacy(framework.BuildContext)))(),
    AsyncSnapshotOfYoutubePlayerValueL: () => (T.AsyncSnapshotOfYoutubePlayerValueL = dart.constFn(async$.AsyncSnapshot$(T.YoutubePlayerValueL())))(),
    AsyncSnapshotLOfYoutubePlayerValueL: () => (T.AsyncSnapshotLOfYoutubePlayerValueL = dart.constFn(dart.legacy(T.AsyncSnapshotOfYoutubePlayerValueL())))(),
    BuildContextLAndAsyncSnapshotLOfYoutubePlayerValueLToWidgetL: () => (T.BuildContextLAndAsyncSnapshotLOfYoutubePlayerValueLToWidgetL = dart.constFn(dart.fnType(T.WidgetL(), [T.BuildContextL(), T.AsyncSnapshotLOfYoutubePlayerValueL()])))(),
    StringL: () => (T.StringL = dart.constFn(dart.legacy(core.String)))(),
    IdentityMapOfStringL$StringL: () => (T.IdentityMapOfStringL$StringL = dart.constFn(_js_helper.IdentityMap$(T.StringL(), T.StringL())))(),
    IFrameElementL: () => (T.IFrameElementL = dart.constFn(dart.legacy(html.IFrameElement)))(),
    CompleterOfIFrameElementL: () => (T.CompleterOfIFrameElementL = dart.constFn(async.Completer$(T.IFrameElementL())))(),
    MapOfStringL$dynamic: () => (T.MapOfStringL$dynamic = dart.constFn(core.Map$(T.StringL(), dart.dynamic)))(),
    MapLOfStringL$dynamic: () => (T.MapLOfStringL$dynamic = dart.constFn(dart.legacy(T.MapOfStringL$dynamic())))(),
    intL: () => (T.intL = dart.constFn(dart.legacy(core.int)))(),
    numL: () => (T.numL = dart.constFn(dart.legacy(core.num)))(),
    doubleL: () => (T.doubleL = dart.constFn(dart.legacy(core.double)))(),
    MessageEventL: () => (T.MessageEventL = dart.constFn(dart.legacy(html.MessageEvent)))(),
    MessageEventLToNull: () => (T.MessageEventLToNull = dart.constFn(dart.fnType(core.Null, [T.MessageEventL()])))(),
    intLToIFrameElementL: () => (T.intLToIFrameElementL = dart.constFn(dart.fnType(T.IFrameElementL(), [T.intL()])))(),
    YoutubePlayerControllerProviderL: () => (T.YoutubePlayerControllerProviderL = dart.constFn(dart.legacy(youtube_value_provider.YoutubePlayerControllerProvider)))(),
    StreamControllerOfYoutubePlayerValueL: () => (T.StreamControllerOfYoutubePlayerValueL = dart.constFn(async.StreamController$(T.YoutubePlayerValueL())))(),
    FutureOfNull: () => (T.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    FutureLOfNull: () => (T.FutureLOfNull = dart.constFn(dart.legacy(T.FutureOfNull())))(),
    StringLToFutureLOfNull: () => (T.StringLToFutureLOfNull = dart.constFn(dart.fnType(T.FutureLOfNull(), [T.StringL()])))(),
    YoutubePlayerValueLToNull: () => (T.YoutubePlayerValueLToNull = dart.constFn(dart.fnType(core.Null, [T.YoutubePlayerValueL()])))(),
    JSArrayOfStringL: () => (T.JSArrayOfStringL = dart.constFn(_interceptors.JSArray$(T.StringL())))()
  });
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = Object.create({
    _: () => S
  });
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C2() {
      return C[2] = dart.constList([], T._LocationL());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[2] || CT.C2,
        [_Location_name]: null,
        [_Location_column]: 22,
        [_Location_line]: 47,
        [_Location_file]: "file:///C:/flutter_windows_v1.12.13+hotfix.8-stable/flutter/.pub-cache/hosted/pub.dartlang.org/youtube_player_iframe-1.2.0+2/lib/src/helpers/youtube_value_builder.dart"
      });
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C[1] || CT.C1,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: null
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "stream",
        [_Location_column]: 7,
        [_Location_line]: 39,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialData",
        [_Location_column]: 7,
        [_Location_line]: 40,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "builder",
        [_Location_column]: 7,
        [_Location_line]: 41,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.constList([C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7], T._LocationL());
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[4] || CT.C4,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 38,
        [_Location_file]: "file:///C:/flutter_windows_v1.12.13+hotfix.8-stable/flutter/.pub-cache/hosted/pub.dartlang.org/youtube_player_iframe-1.2.0+2/lib/src/helpers/youtube_value_builder.dart"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "key",
        [_Location_column]: 7,
        [_Location_line]: 176,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "viewType",
        [_Location_column]: 7,
        [_Location_line]: 177,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.constList([C[10] || CT.C10, C[11] || CT.C11], T._LocationL());
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[9] || CT.C9,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 175,
        [_Location_file]: "file:///C:/flutter_windows_v1.12.13+hotfix.8-stable/flutter/.pub-cache/hosted/pub.dartlang.org/youtube_player_iframe-1.2.0+2/lib/src/players/youtube_player_web.dart"
      });
    },
    get C12() {
      return C[12] = dart.constList([], T.StringL());
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 0
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: player_params.YoutubePlayerParams.prototype,
        [privacyEnhanced$]: false,
        [desktopMode$]: false,
        [startAt$]: C[13] || CT.C13,
        [strictRelatedVideos$]: false,
        [playsInline$]: true,
        [playlist$]: C[12] || CT.C12,
        [origin$]: "https://www.youtube.com",
        [loop$]: false,
        [showVideoAnnotations$]: true,
        [interfaceLanguage$]: "en",
        [showFullscreenButton$]: false,
        [endAt$]: null,
        [enableJavaScript$]: true,
        [enableKeyboard$]: true,
        [showControls$]: true,
        [color$]: "white",
        [enableCaption$]: true,
        [captionLanguage$]: "en",
        [mute$]: false,
        [autoPlay$]: true
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: meta_data.YoutubeMetaData.prototype,
        [YoutubeMetaData_duration]: C[13] || CT.C13,
        [YoutubeMetaData_author]: "",
        [YoutubeMetaData_title]: "",
        [YoutubeMetaData_videoId]: ""
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 9,
        [_Location_line]: 60,
        [_Location_file]: null
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "gestureRecognizers",
        [_Location_column]: 9,
        [_Location_line]: 61,
        [_Location_file]: null
      });
    },
    get C17() {
      return C[17] = dart.constList([C[18] || CT.C18, C[19] || CT.C19], T._LocationL());
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[17] || CT.C17,
        [_Location_name]: null,
        [_Location_column]: 14,
        [_Location_line]: 59,
        [_Location_file]: "file:///C:/flutter_windows_v1.12.13+hotfix.8-stable/flutter/.pub-cache/hosted/pub.dartlang.org/youtube_player_iframe-1.2.0+2/lib/youtube_player_iframe.dart"
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "aspectRatio",
        [_Location_column]: 7,
        [_Location_line]: 58,
        [_Location_file]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 59,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.constList([C[22] || CT.C22, C[23] || CT.C23], T._LocationL());
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[21] || CT.C21,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 57,
        [_Location_file]: "file:///C:/flutter_windows_v1.12.13+hotfix.8-stable/flutter/.pub-cache/hosted/pub.dartlang.org/youtube_player_iframe-1.2.0+2/lib/youtube_player_iframe.dart"
      });
    }
  }, false);
  var C = Array(24).fill(void 0);
  var I = [
    "package:youtube_player_iframe/src/helpers/youtube_value_builder.dart",
    "package:youtube_player_iframe/src/players/youtube_player_web.dart",
    "file:///C:/flutter_windows_v1.12.13+hotfix.8-stable/flutter/.pub-cache/hosted/pub.dartlang.org/youtube_player_iframe-1.2.0+2/lib/src/helpers/youtube_value_provider.dart",
    "package:youtube_player_iframe/src/helpers/youtube_value_provider.dart",
    "package:youtube_player_iframe/src/player_params.dart",
    "file:///C:/flutter_windows_v1.12.13+hotfix.8-stable/flutter/.pub-cache/hosted/pub.dartlang.org/youtube_player_iframe-1.2.0+2/lib/src/controller.dart",
    "package:youtube_player_iframe/src/controller.dart",
    "package:youtube_player_iframe/youtube_player_iframe.dart"
  ];
  var controller$ = dart.privateName(youtube_value_builder, "YoutubeValueBuilder.controller");
  var builder$ = dart.privateName(youtube_value_builder, "YoutubeValueBuilder.builder");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var Widget__location = dart.privateName(framework, "Widget._location");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  youtube_value_builder.YoutubeValueBuilder = class YoutubeValueBuilder extends framework.StatelessWidget {
    get controller() {
      return this[controller$];
    }
    set controller(value) {
      super.controller = value;
    }
    get builder() {
      return this[builder$];
    }
    set builder(value) {
      super.builder = value;
    }
    build(context) {
      let t0;
      let _controller = (t0 = this.controller, t0 == null ? youtube_value_provider['YoutubePlayerControllerExtension|get#ytController'](context) : t0);
      return new (T.StreamBuilderOfYoutubePlayerValueL()).new({stream: _controller, initialData: _controller.value, builder: dart.fn((context, snapshot) => {
          let t1, t0;
          if (dart.test(snapshot.hasData)) {
            t0 = context;
            t1 = snapshot.data;
            return this.builder(t0, t1);
          } else if (dart.test(snapshot.hasError)) {
            developer.log(dart.toString(snapshot.error));
          }
          return C[0] || CT.C0;
        }, T.BuildContextLAndAsyncSnapshotLOfYoutubePlayerValueLToWidgetL()), $creationLocationd_0dea112b090073317d4: C[3] || CT.C3});
    }
  };
  (youtube_value_builder.YoutubeValueBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$] = controller;
    this[builder$] = builder;
    youtube_value_builder.YoutubeValueBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = youtube_value_builder.YoutubeValueBuilder.prototype;
  dart.addTypeTests(youtube_value_builder.YoutubeValueBuilder);
  dart.addTypeCaches(youtube_value_builder.YoutubeValueBuilder);
  dart.setMethodSignature(youtube_value_builder.YoutubeValueBuilder, () => ({
    __proto__: dart.getMethods(youtube_value_builder.YoutubeValueBuilder.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(youtube_value_builder.YoutubeValueBuilder, I[0]);
  dart.setFieldSignature(youtube_value_builder.YoutubeValueBuilder, () => ({
    __proto__: dart.getFields(youtube_value_builder.YoutubeValueBuilder.__proto__),
    controller: dart.finalFieldType(dart.legacy(controller.YoutubePlayerController)),
    builder: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext), dart.legacy(player_value.YoutubePlayerValue)])))
  }));
  player_fragments.youtubeIFrameTag = function youtubeIFrameTag(controller) {
    let params = (() => {
      let t0 = new (T.IdentityMapOfStringL$StringL()).new();
      t0[$_set]("autoplay", player_fragments._boolean(controller.params.autoPlay));
      t0[$_set]("mute", player_fragments._boolean(controller.params.mute));
      t0[$_set]("controls", player_fragments._boolean(controller.params.showControls));
      t0[$_set]("playsinline", player_fragments._boolean(controller.params.playsInline));
      t0[$_set]("enablejsapi", player_fragments._boolean(controller.params.enableJavaScript));
      t0[$_set]("fs", player_fragments._boolean(controller.params.showFullscreenButton));
      t0[$_set]("rel", player_fragments._boolean(!dart.test(controller.params.strictRelatedVideos)));
      t0[$_set]("showinfo", "0");
      t0[$_set]("iv_load_policy", dart.str(dart.test(controller.params.showVideoAnnotations) ? 1 : 3));
      t0[$_set]("modestbranding", "1");
      t0[$_set]("cc_load_policy", player_fragments._boolean(controller.params.enableCaption));
      t0[$_set]("cc_lang_pref", controller.params.captionLanguage);
      t0[$_set]("start", dart.str(controller.params.startAt.inSeconds));
      if (controller.params.endAt != null) t0[$_set]("end", dart.str(controller.params.endAt.inSeconds));
      t0[$_set]("disablekb", player_fragments._boolean(!dart.test(controller.params.enableKeyboard)));
      t0[$_set]("color", controller.params.color);
      t0[$_set]("hl", controller.params.interfaceLanguage);
      t0[$_set]("loop", player_fragments._boolean(controller.params.loop));
      if (dart.test(controller.params.playlist[$isNotEmpty])) t0[$_set]("playlist", dart.str(controller.params.playlist[$join](",")));
      return t0;
    })();
    let youtubeAuthority = dart.test(controller.params.privacyEnhanced) ? "www.youtube-nocookie.com" : "www.youtube.com";
    let sourceUri = core._Uri.https(youtubeAuthority, "embed/" + dart.str(controller.initialVideoId), params);
    return "<iframe id=\"player\" type=\"text/html\"" + " style=\"position:absolute; top:0px; left:0px; bottom:0px; right:10px;" + " width:100%; height:100%; border:none; margin:0; padding:0; overflow:hidden; z-index:999999;\"" + " src=\"" + dart.str(sourceUri) + "\" frameborder=\"0\" allowfullscreen></iframe>";
  };
  player_fragments._boolean = function _boolean(value) {
    return dart.test(value) ? "1" : "0";
  };
  dart.copyProperties(player_fragments, {
    get youtubeIFrameFunctions() {
      return "function play() {\n  player.playVideo();\n  return '';\n}\nfunction pause() {\n  player.pauseVideo();\n  return '';\n}\nfunction loadById(loadSettings) {\n  player.loadVideoById(loadSettings);\n  return '';\n}\nfunction cueById(cueSettings) {\n  player.cueVideoById(cueSettings);\n  return '';\n}\nfunction loadPlaylist(loadSettings) {\n  player.loadPlaylist(loadSettings);\n  return '';\n}\nfunction cuePlaylist(loadSettings) {\n  player.cuePlaylist(loadSettings);\n  return '';\n}\nfunction mute() {\n  player.mute();\n  return '';\n}\nfunction unMute() {\n  player.unMute();\n  return '';\n}\nfunction setVolume(volume) {\n  player.setVolume(volume);\n  return '';\n}\nfunction seekTo(position, seekAhead) {\n  player.seekTo(position, seekAhead);\n  return '';\n}\nfunction setSize(width, height) {\n  player.setSize(width, height);\n  return '';\n}\nfunction setPlaybackRate(rate) {\n  player.setPlaybackRate(rate);\n  return '';\n}\nfunction setLoop(loopPlaylists) {\n  player.setLoop(loopPlaylists);\n  return '';\n}\nfunction setShuffle(shufflePlaylist) {\n  player.setShuffle(shufflePlaylist);\n  return '';\n}\nfunction previous() {\n  player.previousVideo();\n  return '';\n}\nfunction next() {\n  player.nextVideo();\n  return '';\n}\nfunction playVideoAt(index) {\n  player.playVideoAt(index);\n  return '';\n}\nfunction stop() {\n  player.stopVideo();\n  return '';\n}\nfunction isMuted() {\n  return player.isMuted();\n}\nfunction hideTopMenu() {\n  try { document.querySelector('#player').contentDocument.querySelector('.ytp-chrome-top').style.display = 'none'; } catch(e) { }\n  return '';\n}\nfunction hidePauseOverlay() {\n  try { document.querySelector('#player').contentDocument.querySelector('.ytp-pause-overlay').style.display = 'none'; } catch(e) { }\n  return '';\n}\n";
    },
    get initPlayerIFrame() {
      return "var tag = document.createElement('script');\ntag.src = \"https://www.youtube.com/iframe_api\";\nvar firstScriptTag = document.getElementsByTagName('script')[0];\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n";
    }
  });
  var controller$0 = dart.privateName(youtube_player_web, "RawYoutubePlayer.controller");
  var gestureRecognizers$ = dart.privateName(youtube_player_web, "RawYoutubePlayer.gestureRecognizers");
  youtube_player_web.RawYoutubePlayer = class RawYoutubePlayer extends framework.StatefulWidget {
    get controller() {
      return this[controller$0];
    }
    set controller(value) {
      super.controller = value;
    }
    get gestureRecognizers() {
      return this[gestureRecognizers$];
    }
    set gestureRecognizers(value) {
      super.gestureRecognizers = value;
    }
    createState() {
      return new youtube_player_web._WebYoutubePlayerState.new();
    }
  };
  (youtube_player_web.RawYoutubePlayer.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let gestureRecognizers = opts && 'gestureRecognizers' in opts ? opts.gestureRecognizers : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$0] = controller;
    this[gestureRecognizers$] = gestureRecognizers;
    youtube_player_web.RawYoutubePlayer.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = youtube_player_web.RawYoutubePlayer.prototype;
  dart.addTypeTests(youtube_player_web.RawYoutubePlayer);
  dart.addTypeCaches(youtube_player_web.RawYoutubePlayer);
  dart.setMethodSignature(youtube_player_web.RawYoutubePlayer, () => ({
    __proto__: dart.getMethods(youtube_player_web.RawYoutubePlayer.__proto__),
    createState: dart.fnType(dart.legacy(youtube_player_web._WebYoutubePlayerState), [])
  }));
  dart.setLibraryUri(youtube_player_web.RawYoutubePlayer, I[1]);
  dart.setFieldSignature(youtube_player_web.RawYoutubePlayer, () => ({
    __proto__: dart.getFields(youtube_player_web.RawYoutubePlayer.__proto__),
    controller: dart.finalFieldType(dart.legacy(controller.YoutubePlayerController)),
    gestureRecognizers: dart.finalFieldType(dart.legacy(core.Set$(dart.legacy(basic_types.Factory$(dart.legacy(recognizer.OneSequenceGestureRecognizer))))))
  }));
  var _iFrame = dart.privateName(youtube_player_web, "_iFrame");
  var _callMethod = dart.privateName(youtube_player_web, "_callMethod");
  youtube_player_web._WebYoutubePlayerState = class _WebYoutubePlayerState extends framework.State$(dart.legacy(youtube_player_web.RawYoutubePlayer)) {
    initState() {
      let t1;
      super.initState();
      this.controller = this.widget.controller;
      this[_iFrame] = T.CompleterOfIFrameElementL().new();
      let playerIFrame = (t1 = html.IFrameElement.new(), (() => {
        t1.srcdoc = this.player;
        t1.style[$border] = "none";
        return t1;
      })());
      ui.platformViewRegistry.registerViewFactory("youtube-player-" + dart.str(dart.hashCode(this.controller)), dart.fn(id => {
        html.window[$onMessage].listen(dart.fn(event => {
          let data = T.MapLOfStringL$dynamic().as(convert.jsonDecode(core.String.as(event[$data])));
          if (dart.test(data[$containsKey]("Ready"))) {
            this.controller.add(this.controller.value.copyWith({isReady: true}));
          }
          if (dart.test(data[$containsKey]("StateChange"))) {
            switch (T.intL().as(data[$_get]("StateChange"))) {
              case -1:
              {
                this.controller.add(this.controller.value.copyWith({playerState: player_state.PlayerState.unStarted, isReady: true}));
                break;
              }
              case 0:
              {
                this.controller.add(this.controller.value.copyWith({playerState: player_state.PlayerState.ended}));
                break;
              }
              case 1:
              {
                this.controller.add(this.controller.value.copyWith({playerState: player_state.PlayerState.playing, hasPlayed: true, error: youtube_error.YoutubeError.none}));
                break;
              }
              case 2:
              {
                this.controller.add(this.controller.value.copyWith({playerState: player_state.PlayerState.paused}));
                break;
              }
              case 3:
              {
                this.controller.add(this.controller.value.copyWith({playerState: player_state.PlayerState.buffering}));
                break;
              }
              case 5:
              {
                this.controller.add(this.controller.value.copyWith({playerState: player_state.PlayerState.cued}));
                break;
              }
              default:
              {
                dart.throw(core.Exception.new("Invalid player state obtained."));
              }
            }
          }
          if (dart.test(data[$containsKey]("PlaybackQualityChange"))) {
            this.controller.add(this.controller.value.copyWith({playbackQuality: T.StringL().as(data[$_get]("PlaybackQualityChange"))}));
          }
          if (dart.test(data[$containsKey]("PlaybackRateChange"))) {
            let rate = T.numL().as(data[$_get]("PlaybackRateChange"));
            this.controller.add(this.controller.value.copyWith({playbackRate: rate[$toDouble]()}));
          }
          if (dart.test(data[$containsKey]("Errors"))) {
            this.controller.add(this.controller.value.copyWith({error: youtube_error.errorEnum(T.intL().as(data[$_get]("Errors")))}));
          }
          if (dart.test(data[$containsKey]("VideoData"))) {
            this.controller.add(this.controller.value.copyWith({metaData: meta_data.YoutubeMetaData.fromRawData(data[$_get]("VideoData"))}));
          }
          if (dart.test(data[$containsKey]("VideoTime"))) {
            let position = T.doubleL().as(dart.dsend(data[$_get]("VideoTime"), '_get', ["currentTime"]));
            let buffered = T.numL().as(dart.dsend(data[$_get]("VideoTime"), '_get', ["videoLoadedFraction"]));
            if (position == null || buffered == null) return;
            this.controller.add(this.controller.value.copyWith({position: new core.Duration.new({milliseconds: (dart.notNull(position) * 1000)[$floor]()}), buffered: buffered[$toDouble]()}));
          }
        }, T.MessageEventLToNull()));
        if (!dart.test(this[_iFrame].isCompleted)) {
          this[_iFrame].complete(playerIFrame);
        }
        this.controller.invokeJavascript = dart.bind(this, _callMethod);
        return playerIFrame;
      }, T.intLToIFrameElementL()));
    }
    [_callMethod](methodName) {
      return async.async(dart.void, (function* _callMethod() {
        let t1;
        let iFrame = (yield this[_iFrame].future);
        t1 = iFrame[$contentWindow];
        t1 == null ? null : t1[$postMessage](methodName, "*");
      }).bind(this));
    }
    build(context) {
      return new platform_view.HtmlElementView.new({key: new framework.ObjectKey.new(this.controller), viewType: "youtube-player-" + dart.str(dart.hashCode(this.controller)), $creationLocationd_0dea112b090073317d4: C[8] || CT.C8});
    }
    get player() {
      return "    <!DOCTYPE html>\n    <body>\n        " + dart.str(player_fragments.youtubeIFrameTag(this.controller)) + "\n        <script>\n            " + dart.str(player_fragments.initPlayerIFrame) + "\n            var player;\n            var timerId;\n            function onYouTubeIframeAPIReady() {\n                player = new YT.Player('player', {\n                    events: {\n                      onReady: (event) => sendMessage({ 'Ready': true }),\n                      onStateChange: (event) => sendPlayerStateChange(event.data),\n                      onPlaybackQualityChange: (event) => sendMessage({ 'PlaybackQualityChange': event.data }),\n                      onPlaybackRateChange: (event) => sendMessage({ 'PlaybackRateChange': event.data }),\n                      onError: (error) => sendMessage({ 'Errors': event.data }),\n                    },\n                });\n            }\n            \n            window.addEventListener('message', (event) => {\n               try { eval(event.data) } catch (e) {}\n            }, false);\n            \n            function sendMessage(message) {\n              window.parent.postMessage(JSON.stringify(message), '*');\n            }\n\n            function sendPlayerStateChange(playerState) {\n                clearTimeout(timerId);\n                sendMessage({ 'StateChange': playerState });\n                if (playerState == 1) {\n                    startSendCurrentTimeInterval();\n                    sendVideoData(player);\n                }\n            }\n\n            function sendVideoData(player) {\n                var videoData = {\n                    'duration': player.getDuration(),\n                    'title': player.getVideoData().title,\n                    'author': player.getVideoData().author,\n                    'videoId': player.getVideoData().video_id\n                };\n                sendMessage({ 'VideoData': videoData });\n            }\n\n            function startSendCurrentTimeInterval() {\n                timerId = setInterval(function () {\n                  var videoTime = {\n                      'currentTime': player.getCurrentTime(),\n                      'videoLoadedFraction': player.getVideoLoadedFraction()\n                  };\n                  sendMessage({ 'VideoTime': videoTime });\n                }, 100);\n            }\n            \n            " + dart.str(player_fragments.youtubeIFrameFunctions) + "\n        </script>\n    </body>\n  ";
    }
  };
  (youtube_player_web._WebYoutubePlayerState.new = function() {
    this.controller = null;
    this[_iFrame] = null;
    youtube_player_web._WebYoutubePlayerState.__proto__.new.call(this);
    ;
  }).prototype = youtube_player_web._WebYoutubePlayerState.prototype;
  dart.addTypeTests(youtube_player_web._WebYoutubePlayerState);
  dart.addTypeCaches(youtube_player_web._WebYoutubePlayerState);
  dart.setMethodSignature(youtube_player_web._WebYoutubePlayerState, () => ({
    __proto__: dart.getMethods(youtube_player_web._WebYoutubePlayerState.__proto__),
    [_callMethod]: dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.String)]),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setGetterSignature(youtube_player_web._WebYoutubePlayerState, () => ({
    __proto__: dart.getGetters(youtube_player_web._WebYoutubePlayerState.__proto__),
    player: dart.legacy(core.String)
  }));
  dart.setLibraryUri(youtube_player_web._WebYoutubePlayerState, I[1]);
  dart.setFieldSignature(youtube_player_web._WebYoutubePlayerState, () => ({
    __proto__: dart.getFields(youtube_player_web._WebYoutubePlayerState.__proto__),
    controller: dart.fieldType(dart.legacy(controller.YoutubePlayerController)),
    [_iFrame]: dart.fieldType(dart.legacy(async.Completer$(dart.legacy(html.IFrameElement))))
  }));
  var controller$1 = dart.privateName(youtube_value_provider, "YoutubePlayerControllerProvider.controller");
  youtube_value_provider.YoutubePlayerControllerProvider = class YoutubePlayerControllerProvider extends framework.InheritedWidget {
    get controller() {
      return this[controller$1];
    }
    set controller(value) {
      super.controller = value;
    }
    static of(context) {
      let controllerProvider = context.dependOnInheritedWidgetOfExactType(T.YoutubePlayerControllerProviderL());
      if (!(controllerProvider != null)) dart.assertFailed("Cannot find YoutubePlayerControllerProvider above. Please wrap parent widget with YoutubePlayerControllerProvider.", I[2], 27, 7, "controllerProvider != null");
      return controllerProvider.controller;
    }
    updateShouldNotify(old) {
      T.YoutubePlayerControllerProviderL().as(old);
      return dart.hashCode(old.controller) != dart.hashCode(this.controller);
    }
  };
  (youtube_value_provider.YoutubePlayerControllerProvider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$1] = controller;
    if (!(controller != null)) dart.assertFailed(null, I[2], 19, 16, "controller != null");
    youtube_value_provider.YoutubePlayerControllerProvider.__proto__.new.call(this, {key: key, child: child, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = youtube_value_provider.YoutubePlayerControllerProvider.prototype;
  dart.addTypeTests(youtube_value_provider.YoutubePlayerControllerProvider);
  dart.addTypeCaches(youtube_value_provider.YoutubePlayerControllerProvider);
  dart.setMethodSignature(youtube_value_provider.YoutubePlayerControllerProvider, () => ({
    __proto__: dart.getMethods(youtube_value_provider.YoutubePlayerControllerProvider.__proto__),
    updateShouldNotify: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.Object)])
  }));
  dart.setLibraryUri(youtube_value_provider.YoutubePlayerControllerProvider, I[3]);
  dart.setFieldSignature(youtube_value_provider.YoutubePlayerControllerProvider, () => ({
    __proto__: dart.getFields(youtube_value_provider.YoutubePlayerControllerProvider.__proto__),
    controller: dart.finalFieldType(dart.legacy(controller.YoutubePlayerController))
  }));
  youtube_value_provider['YoutubePlayerControllerExtension|get#ytController'] = function YoutubePlayerControllerExtension$124get$35ytController($this) {
    return youtube_value_provider.YoutubePlayerControllerProvider.of($this);
  };
  var autoPlay$ = dart.privateName(player_params, "YoutubePlayerParams.autoPlay");
  var mute$ = dart.privateName(player_params, "YoutubePlayerParams.mute");
  var captionLanguage$ = dart.privateName(player_params, "YoutubePlayerParams.captionLanguage");
  var enableCaption$ = dart.privateName(player_params, "YoutubePlayerParams.enableCaption");
  var color$ = dart.privateName(player_params, "YoutubePlayerParams.color");
  var showControls$ = dart.privateName(player_params, "YoutubePlayerParams.showControls");
  var enableKeyboard$ = dart.privateName(player_params, "YoutubePlayerParams.enableKeyboard");
  var enableJavaScript$ = dart.privateName(player_params, "YoutubePlayerParams.enableJavaScript");
  var endAt$ = dart.privateName(player_params, "YoutubePlayerParams.endAt");
  var showFullscreenButton$ = dart.privateName(player_params, "YoutubePlayerParams.showFullscreenButton");
  var interfaceLanguage$ = dart.privateName(player_params, "YoutubePlayerParams.interfaceLanguage");
  var showVideoAnnotations$ = dart.privateName(player_params, "YoutubePlayerParams.showVideoAnnotations");
  var loop$ = dart.privateName(player_params, "YoutubePlayerParams.loop");
  var origin$ = dart.privateName(player_params, "YoutubePlayerParams.origin");
  var playlist$ = dart.privateName(player_params, "YoutubePlayerParams.playlist");
  var playsInline$ = dart.privateName(player_params, "YoutubePlayerParams.playsInline");
  var strictRelatedVideos$ = dart.privateName(player_params, "YoutubePlayerParams.strictRelatedVideos");
  var startAt$ = dart.privateName(player_params, "YoutubePlayerParams.startAt");
  var desktopMode$ = dart.privateName(player_params, "YoutubePlayerParams.desktopMode");
  var privacyEnhanced$ = dart.privateName(player_params, "YoutubePlayerParams.privacyEnhanced");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  player_params.YoutubePlayerParams = class YoutubePlayerParams extends core.Object {
    get autoPlay() {
      return this[autoPlay$];
    }
    set autoPlay(value) {
      super.autoPlay = value;
    }
    get mute() {
      return this[mute$];
    }
    set mute(value) {
      super.mute = value;
    }
    get captionLanguage() {
      return this[captionLanguage$];
    }
    set captionLanguage(value) {
      super.captionLanguage = value;
    }
    get enableCaption() {
      return this[enableCaption$];
    }
    set enableCaption(value) {
      super.enableCaption = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get showControls() {
      return this[showControls$];
    }
    set showControls(value) {
      super.showControls = value;
    }
    get enableKeyboard() {
      return this[enableKeyboard$];
    }
    set enableKeyboard(value) {
      super.enableKeyboard = value;
    }
    get enableJavaScript() {
      return this[enableJavaScript$];
    }
    set enableJavaScript(value) {
      super.enableJavaScript = value;
    }
    get endAt() {
      return this[endAt$];
    }
    set endAt(value) {
      super.endAt = value;
    }
    get showFullscreenButton() {
      return this[showFullscreenButton$];
    }
    set showFullscreenButton(value) {
      super.showFullscreenButton = value;
    }
    get interfaceLanguage() {
      return this[interfaceLanguage$];
    }
    set interfaceLanguage(value) {
      super.interfaceLanguage = value;
    }
    get showVideoAnnotations() {
      return this[showVideoAnnotations$];
    }
    set showVideoAnnotations(value) {
      super.showVideoAnnotations = value;
    }
    get loop() {
      return this[loop$];
    }
    set loop(value) {
      super.loop = value;
    }
    get origin() {
      return this[origin$];
    }
    set origin(value) {
      super.origin = value;
    }
    get playlist() {
      return this[playlist$];
    }
    set playlist(value) {
      super.playlist = value;
    }
    get playsInline() {
      return this[playsInline$];
    }
    set playsInline(value) {
      super.playsInline = value;
    }
    get strictRelatedVideos() {
      return this[strictRelatedVideos$];
    }
    set strictRelatedVideos(value) {
      super.strictRelatedVideos = value;
    }
    get startAt() {
      return this[startAt$];
    }
    set startAt(value) {
      super.startAt = value;
    }
    get desktopMode() {
      return this[desktopMode$];
    }
    set desktopMode(value) {
      super.desktopMode = value;
    }
    get privacyEnhanced() {
      return this[privacyEnhanced$];
    }
    set privacyEnhanced(value) {
      super.privacyEnhanced = value;
    }
  };
  (player_params.YoutubePlayerParams.new = function(opts) {
    let autoPlay = opts && 'autoPlay' in opts ? opts.autoPlay : true;
    let mute = opts && 'mute' in opts ? opts.mute : false;
    let captionLanguage = opts && 'captionLanguage' in opts ? opts.captionLanguage : "en";
    let enableCaption = opts && 'enableCaption' in opts ? opts.enableCaption : true;
    let color = opts && 'color' in opts ? opts.color : "white";
    let showControls = opts && 'showControls' in opts ? opts.showControls : true;
    let enableKeyboard = opts && 'enableKeyboard' in opts ? opts.enableKeyboard : true;
    let enableJavaScript = opts && 'enableJavaScript' in opts ? opts.enableJavaScript : true;
    let endAt = opts && 'endAt' in opts ? opts.endAt : null;
    let showFullscreenButton = opts && 'showFullscreenButton' in opts ? opts.showFullscreenButton : false;
    let interfaceLanguage = opts && 'interfaceLanguage' in opts ? opts.interfaceLanguage : "en";
    let showVideoAnnotations = opts && 'showVideoAnnotations' in opts ? opts.showVideoAnnotations : true;
    let loop = opts && 'loop' in opts ? opts.loop : false;
    let origin = opts && 'origin' in opts ? opts.origin : "https://www.youtube.com";
    let playlist = opts && 'playlist' in opts ? opts.playlist : C[12] || CT.C12;
    let playsInline = opts && 'playsInline' in opts ? opts.playsInline : true;
    let strictRelatedVideos = opts && 'strictRelatedVideos' in opts ? opts.strictRelatedVideos : false;
    let startAt = opts && 'startAt' in opts ? opts.startAt : C[13] || CT.C13;
    let desktopMode = opts && 'desktopMode' in opts ? opts.desktopMode : false;
    let privacyEnhanced = opts && 'privacyEnhanced' in opts ? opts.privacyEnhanced : false;
    this[autoPlay$] = autoPlay;
    this[mute$] = mute;
    this[captionLanguage$] = captionLanguage;
    this[enableCaption$] = enableCaption;
    this[color$] = color;
    this[showControls$] = showControls;
    this[enableKeyboard$] = enableKeyboard;
    this[enableJavaScript$] = enableJavaScript;
    this[endAt$] = endAt;
    this[showFullscreenButton$] = showFullscreenButton;
    this[interfaceLanguage$] = interfaceLanguage;
    this[showVideoAnnotations$] = showVideoAnnotations;
    this[loop$] = loop;
    this[origin$] = origin;
    this[playlist$] = playlist;
    this[playsInline$] = playsInline;
    this[strictRelatedVideos$] = strictRelatedVideos;
    this[startAt$] = startAt;
    this[desktopMode$] = desktopMode;
    this[privacyEnhanced$] = privacyEnhanced;
    ;
  }).prototype = player_params.YoutubePlayerParams.prototype;
  dart.addTypeTests(player_params.YoutubePlayerParams);
  dart.addTypeCaches(player_params.YoutubePlayerParams);
  dart.setLibraryUri(player_params.YoutubePlayerParams, I[4]);
  dart.setFieldSignature(player_params.YoutubePlayerParams, () => ({
    __proto__: dart.getFields(player_params.YoutubePlayerParams.__proto__),
    autoPlay: dart.finalFieldType(dart.legacy(core.bool)),
    mute: dart.finalFieldType(dart.legacy(core.bool)),
    captionLanguage: dart.finalFieldType(dart.legacy(core.String)),
    enableCaption: dart.finalFieldType(dart.legacy(core.bool)),
    color: dart.finalFieldType(dart.legacy(core.String)),
    showControls: dart.finalFieldType(dart.legacy(core.bool)),
    enableKeyboard: dart.finalFieldType(dart.legacy(core.bool)),
    enableJavaScript: dart.finalFieldType(dart.legacy(core.bool)),
    endAt: dart.finalFieldType(dart.legacy(core.Duration)),
    showFullscreenButton: dart.finalFieldType(dart.legacy(core.bool)),
    interfaceLanguage: dart.finalFieldType(dart.legacy(core.String)),
    showVideoAnnotations: dart.finalFieldType(dart.legacy(core.bool)),
    loop: dart.finalFieldType(dart.legacy(core.bool)),
    origin: dart.finalFieldType(dart.legacy(core.String)),
    playlist: dart.finalFieldType(dart.legacy(core.List$(dart.legacy(core.String)))),
    playsInline: dart.finalFieldType(dart.legacy(core.bool)),
    strictRelatedVideos: dart.finalFieldType(dart.legacy(core.bool)),
    startAt: dart.finalFieldType(dart.legacy(core.Duration)),
    desktopMode: dart.finalFieldType(dart.legacy(core.bool)),
    privacyEnhanced: dart.finalFieldType(dart.legacy(core.bool))
  }));
  var initialVideoId$ = dart.privateName(controller, "YoutubePlayerController.initialVideoId");
  var params$ = dart.privateName(controller, "YoutubePlayerController.params");
  var invokeJavascript = dart.privateName(controller, "YoutubePlayerController.invokeJavascript");
  var onEnterFullscreen = dart.privateName(controller, "YoutubePlayerController.onEnterFullscreen");
  var onExitFullscreen = dart.privateName(controller, "YoutubePlayerController.onExitFullscreen");
  var _controller = dart.privateName(controller, "_controller");
  var _value = dart.privateName(controller, "_value");
  var _updateId = dart.privateName(controller, "_updateId");
  var YoutubeMetaData_duration = dart.privateName(meta_data, "YoutubeMetaData.duration");
  var YoutubeMetaData_author = dart.privateName(meta_data, "YoutubeMetaData.author");
  var YoutubeMetaData_title = dart.privateName(meta_data, "YoutubeMetaData.title");
  var YoutubeMetaData_videoId = dart.privateName(meta_data, "YoutubeMetaData.videoId");
  controller.YoutubePlayerController = class YoutubePlayerController extends async.Stream$(dart.legacy(player_value.YoutubePlayerValue)) {
    get initialVideoId() {
      return this[initialVideoId$];
    }
    set initialVideoId(value) {
      super.initialVideoId = value;
    }
    get params() {
      return this[params$];
    }
    set params(value) {
      super.params = value;
    }
    get invokeJavascript() {
      return this[invokeJavascript];
    }
    set invokeJavascript(value) {
      this[invokeJavascript] = value;
    }
    get onEnterFullscreen() {
      return this[onEnterFullscreen];
    }
    set onEnterFullscreen(value) {
      this[onEnterFullscreen] = value;
    }
    get onExitFullscreen() {
      return this[onExitFullscreen];
    }
    set onExitFullscreen(value) {
      this[onExitFullscreen] = value;
    }
    get value() {
      return this[_value];
    }
    add(data) {
      T.YoutubePlayerValueL().as(data);
      return this[_controller].add(data);
    }
    listen(onData, opts) {
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onDone = opts && 'onDone' in opts ? opts.onDone : null;
      let cancelOnError = opts && 'cancelOnError' in opts ? opts.cancelOnError : null;
      return this[_controller].stream.listen(dart.fn(value => {
        this[_value] = value;
        onData(value);
      }, T.YoutubePlayerValueLToNull()), {onError: onError, onDone: onDone, cancelOnError: cancelOnError});
    }
    close() {
      return this[_controller].close();
    }
    play() {
      let t2;
      t2 = "play()";
      return this.invokeJavascript(t2);
    }
    pause() {
      let t2;
      t2 = "pause()";
      return this.invokeJavascript(t2);
    }
    stop() {
      let t2;
      t2 = "stop()";
      return this.invokeJavascript(t2);
    }
    nextVideo() {
      let t2;
      t2 = "next()";
      return this.invokeJavascript(t2);
    }
    previousVideo() {
      let t2;
      t2 = "previous()";
      return this.invokeJavascript(t2);
    }
    playVideoAt(index) {
      let t2;
      t2 = "playVideoAt(" + dart.str(index) + ")";
      return this.invokeJavascript(t2);
    }
    load(videoId, opts) {
      let t2;
      let startAt = opts && 'startAt' in opts ? opts.startAt : C[13] || CT.C13;
      let endAt = opts && 'endAt' in opts ? opts.endAt : null;
      let loadParams = "videoId:\"" + dart.str(videoId) + "\",startSeconds:" + dart.str(startAt.inSeconds);
      if (endAt != null && dart.test(endAt['>'](startAt))) {
        loadParams = loadParams + (",endSeconds:" + dart.str(endAt.inSeconds));
      }
      this[_updateId](videoId);
      if (dart.test(this[_value].hasError)) {
        this.pause();
      } else {
        t2 = "loadById({" + loadParams + "})";
        this.invokeJavascript(t2);
      }
    }
    cue(videoId, opts) {
      let t2;
      let startAt = opts && 'startAt' in opts ? opts.startAt : C[13] || CT.C13;
      let endAt = opts && 'endAt' in opts ? opts.endAt : null;
      let cueParams = "videoId:\"" + dart.str(videoId) + "\",startSeconds:" + dart.str(startAt.inSeconds);
      if (endAt != null && dart.test(endAt['>'](startAt))) {
        cueParams = cueParams + (",endSeconds:" + dart.str(endAt.inSeconds));
      }
      this[_updateId](videoId);
      if (dart.test(this[_value].hasError)) {
        this.pause();
      } else {
        t2 = "cueById({" + cueParams + "})";
        this.invokeJavascript(t2);
      }
    }
    loadPlaylist(list, opts) {
      let t2;
      let listType = opts && 'listType' in opts ? opts.listType : "playlist";
      let startAt = opts && 'startAt' in opts ? opts.startAt : 0;
      let index = opts && 'index' in opts ? opts.index : 0;
      let loadParams = "list:\"" + dart.str(list) + "\",listType:\"" + dart.str(listType) + "\",index:" + dart.str(index) + ",startSeconds:" + dart.str(startAt);
      t2 = "loadPlaylist({" + loadParams + "})";
      this.invokeJavascript(t2);
    }
    cuePlaylist(list, opts) {
      let t2;
      let listType = opts && 'listType' in opts ? opts.listType : "playlist";
      let startAt = opts && 'startAt' in opts ? opts.startAt : 0;
      let index = opts && 'index' in opts ? opts.index : 0;
      let cueParams = "list:\"" + dart.str(list) + "\",listType:\"" + dart.str(listType) + "\",index:" + dart.str(index) + ",startSeconds:" + dart.str(startAt);
      t2 = "cuePlaylist({" + cueParams + "})";
      this.invokeJavascript(t2);
    }
    [_updateId](id) {
      let t2;
      if ((t2 = id, t2 == null ? null : t2.length) !== 11) {
        this.add(this[_value].copyWith({error: youtube_error.YoutubeError.invalidParam}));
      } else {
        this.add(this[_value].copyWith({error: youtube_error.YoutubeError.none, hasPlayed: false}));
      }
    }
    mute() {
      let t2;
      t2 = "mute()";
      return this.invokeJavascript(t2);
    }
    unMute() {
      let t2;
      t2 = "unMute()";
      return this.invokeJavascript(t2);
    }
    setVolume(volume) {
      let t2;
      return dart.notNull(volume) >= 0 && dart.notNull(volume) <= 100 ? (t2 = "setVolume(" + dart.str(volume) + ")", this.invokeJavascript(t2)) : dart.throw(core.Exception.new("Volume should be between 0 and 100"));
    }
    seekTo(position, opts) {
      let t2;
      let allowSeekAhead = opts && 'allowSeekAhead' in opts ? opts.allowSeekAhead : true;
      t2 = "seekTo(" + dart.str(position.inSeconds) + "," + dart.str(allowSeekAhead) + ")";
      this.invokeJavascript(t2);
      this.play();
      this.add(this[_value].copyWith({position: position}));
    }
    setSize(size) {
      let t2;
      t2 = "setSize(" + dart.str(size.width) + ", " + dart.str(size.height) + ")";
      return this.invokeJavascript(t2);
    }
    setPlaybackRate(rate) {
      let t2;
      t2 = "setPlaybackRate(" + dart.str(rate) + ")";
      return this.invokeJavascript(t2);
    }
    setLoop(loop) {
      let t2;
      t2 = "setLoop(" + dart.str(loop) + ")";
      return this.invokeJavascript(t2);
    }
    setShuffle(shuffle) {
      let t2;
      t2 = "setShuffle(" + dart.str(shuffle) + ")";
      return this.invokeJavascript(t2);
    }
    hideTopMenu() {
      let t2;
      t2 = "hideTopMenu()";
      return this.invokeJavascript(t2);
    }
    hidePauseOverlay() {
      let t2;
      t2 = "hidePauseOverlay()";
      return this.invokeJavascript(t2);
    }
    get metadata() {
      return this[_value].metaData;
    }
    reset() {
      return this.add(this[_value].copyWith({isReady: false, isFullScreen: false, playerState: player_state.PlayerState.unknown, hasPlayed: false, position: core.Duration.zero, buffered: 0.0, error: youtube_error.YoutubeError.none, metaData: C[15] || CT.C15}));
    }
    static convertUrlToId(url, opts) {
      let t2, t2$;
      let trimWhitespaces = opts && 'trimWhitespaces' in opts ? opts.trimWhitespaces : true;
      if (!dart.test((t2$ = (t2 = url, t2 == null ? null : t2[$isNotEmpty]), t2$ == null ? false : t2$))) dart.assertFailed("Url cannot be empty", I[5], 302, 12, "url?.isNotEmpty ?? false");
      if (!url[$contains]("http") && url.length === 11) return url;
      if (dart.test(trimWhitespaces)) url = url[$trim]();
      for (let regex of T.JSArrayOfStringL().of(["^https:\\/\\/(?:www\\.|m\\.)?youtube\\.com\\/watch\\?v=([_\\-a-zA-Z0-9]{11}).*$", "^https:\\/\\/(?:www\\.|m\\.)?youtube(?:-nocookie)?\\.com\\/embed\\/([_\\-a-zA-Z0-9]{11}).*$", "^https:\\/\\/youtu\\.be\\/([_\\-a-zA-Z0-9]{11}).*$"])) {
        let match = core.RegExp.new(regex).firstMatch(url);
        if (match != null && dart.notNull(match.groupCount) >= 1) return match.group(1);
      }
      return null;
    }
    static getThumbnail(opts) {
      let videoId = opts && 'videoId' in opts ? opts.videoId : null;
      let quality = opts && 'quality' in opts ? opts.quality : "sddefault";
      let webp = opts && 'webp' in opts ? opts.webp : true;
      return dart.test(webp) ? "https://i3.ytimg.com/vi_webp/" + dart.str(videoId) + "/" + dart.str(quality) + ".webp" : "https://i3.ytimg.com/vi/" + dart.str(videoId) + "/" + dart.str(quality) + ".jpg";
    }
  };
  (controller.YoutubePlayerController.new = function(opts) {
    let initialVideoId = opts && 'initialVideoId' in opts ? opts.initialVideoId : null;
    let params = opts && 'params' in opts ? opts.params : C[14] || CT.C14;
    this[invokeJavascript] = null;
    this[onEnterFullscreen] = null;
    this[onExitFullscreen] = null;
    this[_controller] = T.StreamControllerOfYoutubePlayerValueL().broadcast();
    this[_value] = new player_value.YoutubePlayerValue.new();
    this[initialVideoId$] = initialVideoId;
    this[params$] = params;
    controller.YoutubePlayerController.__proto__.new.call(this);
    this.invokeJavascript = dart.fn(_ => async.async(core.Null, function*() {
    }), T.StringLToFutureLOfNull());
  }).prototype = controller.YoutubePlayerController.prototype;
  dart.addTypeTests(controller.YoutubePlayerController);
  dart.addTypeCaches(controller.YoutubePlayerController);
  controller.YoutubePlayerController[dart.implements] = () => [core.Sink$(dart.legacy(player_value.YoutubePlayerValue))];
  dart.setMethodSignature(controller.YoutubePlayerController, () => ({
    __proto__: dart.getMethods(controller.YoutubePlayerController.__proto__),
    add: dart.fnType(dart.void, [dart.legacy(core.Object)]),
    listen: dart.fnType(dart.legacy(async.StreamSubscription$(dart.legacy(player_value.YoutubePlayerValue))), [dart.legacy(dart.fnType(dart.void, [dart.legacy(player_value.YoutubePlayerValue)]))], {cancelOnError: dart.legacy(core.bool), onDone: dart.legacy(dart.fnType(dart.void, [])), onError: dart.legacy(core.Function)}, {}),
    close: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    play: dart.fnType(dart.void, []),
    pause: dart.fnType(dart.void, []),
    stop: dart.fnType(dart.void, []),
    nextVideo: dart.fnType(dart.void, []),
    previousVideo: dart.fnType(dart.void, []),
    playVideoAt: dart.fnType(dart.void, [dart.legacy(core.int)]),
    load: dart.fnType(dart.void, [dart.legacy(core.String)], {endAt: dart.legacy(core.Duration), startAt: dart.legacy(core.Duration)}, {}),
    cue: dart.fnType(dart.void, [dart.legacy(core.String)], {endAt: dart.legacy(core.Duration), startAt: dart.legacy(core.Duration)}, {}),
    loadPlaylist: dart.fnType(dart.void, [dart.legacy(core.String)], {index: dart.legacy(core.int), listType: dart.legacy(core.String), startAt: dart.legacy(core.int)}, {}),
    cuePlaylist: dart.fnType(dart.void, [dart.legacy(core.String)], {index: dart.legacy(core.int), listType: dart.legacy(core.String), startAt: dart.legacy(core.int)}, {}),
    [_updateId]: dart.fnType(dart.void, [dart.legacy(core.String)]),
    mute: dart.fnType(dart.void, []),
    unMute: dart.fnType(dart.void, []),
    setVolume: dart.fnType(dart.void, [dart.legacy(core.int)]),
    seekTo: dart.fnType(dart.void, [dart.legacy(core.Duration)], {allowSeekAhead: dart.legacy(core.bool)}, {}),
    setSize: dart.fnType(dart.void, [dart.legacy(ui.Size)]),
    setPlaybackRate: dart.fnType(dart.void, [dart.legacy(core.double)]),
    setLoop: dart.fnType(dart.void, [dart.legacy(core.bool)]),
    setShuffle: dart.fnType(dart.void, [dart.legacy(core.bool)]),
    hideTopMenu: dart.fnType(dart.void, []),
    hidePauseOverlay: dart.fnType(dart.void, []),
    reset: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(controller.YoutubePlayerController, () => ({
    __proto__: dart.getGetters(controller.YoutubePlayerController.__proto__),
    value: dart.legacy(player_value.YoutubePlayerValue),
    metadata: dart.legacy(meta_data.YoutubeMetaData)
  }));
  dart.setLibraryUri(controller.YoutubePlayerController, I[6]);
  dart.setFieldSignature(controller.YoutubePlayerController, () => ({
    __proto__: dart.getFields(controller.YoutubePlayerController.__proto__),
    initialVideoId: dart.finalFieldType(dart.legacy(core.String)),
    params: dart.finalFieldType(dart.legacy(player_params.YoutubePlayerParams)),
    invokeJavascript: dart.fieldType(dart.legacy(dart.fnType(dart.legacy(async.Future$(dart.void)), [dart.legacy(core.String)]))),
    onEnterFullscreen: dart.fieldType(dart.legacy(dart.fnType(dart.void, []))),
    onExitFullscreen: dart.fieldType(dart.legacy(dart.fnType(dart.void, []))),
    [_controller]: dart.finalFieldType(dart.legacy(async.StreamController$(dart.legacy(player_value.YoutubePlayerValue)))),
    [_value]: dart.fieldType(dart.legacy(player_value.YoutubePlayerValue))
  }));
  var controller$2 = dart.privateName(youtube_player_iframe, "YoutubePlayerIFrame.controller");
  var aspectRatio$ = dart.privateName(youtube_player_iframe, "YoutubePlayerIFrame.aspectRatio");
  var gestureRecognizers$0 = dart.privateName(youtube_player_iframe, "YoutubePlayerIFrame.gestureRecognizers");
  youtube_player_iframe.YoutubePlayerIFrame = class YoutubePlayerIFrame extends framework.StatelessWidget {
    get controller() {
      return this[controller$2];
    }
    set controller(value) {
      super.controller = value;
    }
    get aspectRatio() {
      return this[aspectRatio$];
    }
    set aspectRatio(value) {
      super.aspectRatio = value;
    }
    get gestureRecognizers() {
      return this[gestureRecognizers$0];
    }
    set gestureRecognizers(value) {
      super.gestureRecognizers = value;
    }
    build(context) {
      let t2;
      return new basic.AspectRatio.new({aspectRatio: this.aspectRatio, child: new youtube_player_web.RawYoutubePlayer.new({controller: (t2 = this.controller, t2 == null ? youtube_value_provider['YoutubePlayerControllerExtension|get#ytController'](context) : t2), gestureRecognizers: this.gestureRecognizers, $creationLocationd_0dea112b090073317d4: C[16] || CT.C16}), $creationLocationd_0dea112b090073317d4: C[20] || CT.C20});
    }
  };
  (youtube_player_iframe.YoutubePlayerIFrame.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let aspectRatio = opts && 'aspectRatio' in opts ? opts.aspectRatio : 1.7777777777777777;
    let gestureRecognizers = opts && 'gestureRecognizers' in opts ? opts.gestureRecognizers : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[controller$2] = controller;
    this[aspectRatio$] = aspectRatio;
    this[gestureRecognizers$0] = gestureRecognizers;
    youtube_player_iframe.YoutubePlayerIFrame.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = youtube_player_iframe.YoutubePlayerIFrame.prototype;
  dart.addTypeTests(youtube_player_iframe.YoutubePlayerIFrame);
  dart.addTypeCaches(youtube_player_iframe.YoutubePlayerIFrame);
  dart.setMethodSignature(youtube_player_iframe.YoutubePlayerIFrame, () => ({
    __proto__: dart.getMethods(youtube_player_iframe.YoutubePlayerIFrame.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(youtube_player_iframe.YoutubePlayerIFrame, I[7]);
  dart.setFieldSignature(youtube_player_iframe.YoutubePlayerIFrame, () => ({
    __proto__: dart.getFields(youtube_player_iframe.YoutubePlayerIFrame.__proto__),
    controller: dart.finalFieldType(dart.legacy(controller.YoutubePlayerController)),
    aspectRatio: dart.finalFieldType(dart.legacy(core.double)),
    gestureRecognizers: dart.finalFieldType(dart.legacy(core.Set$(dart.legacy(basic_types.Factory$(dart.legacy(recognizer.OneSequenceGestureRecognizer))))))
  }));
  dart.trackLibraries("packages/youtube_player_iframe/src/helpers/youtube_value_builder.dart", {
    "package:youtube_player_iframe/src/helpers/youtube_value_builder.dart": youtube_value_builder,
    "package:youtube_player_iframe/src/helpers/player_fragments.dart": player_fragments,
    "package:youtube_player_iframe/src/players/youtube_player_web.dart": youtube_player_web,
    "package:youtube_player_iframe/src/helpers/youtube_value_provider.dart": youtube_value_provider,
    "package:youtube_player_iframe/src/player_params.dart": player_params,
    "package:youtube_player_iframe/src/controller.dart": controller,
    "package:youtube_player_iframe/youtube_player_iframe.dart": youtube_player_iframe
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["youtube_value_builder.dart","player_fragments.dart","../players/youtube_player_web.dart","youtube_value_provider.dart","../player_params.dart","../controller.dart","../../youtube_player_iframe.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../packages/youtube_player_iframe/src/helpers/youtube_value_builder.dart.lib.js"}');
  // Exports:
  return {
    src__helpers__youtube_value_builder: youtube_value_builder,
    src__helpers__player_fragments: player_fragments,
    src__players__youtube_player_web: youtube_player_web,
    src__helpers__youtube_value_provider: youtube_value_provider,
    src__player_params: player_params,
    src__controller: controller,
    youtube_player_iframe: youtube_player_iframe
  };
}));

//# sourceMappingURL=youtube_value_builder.dart.lib.js.map
